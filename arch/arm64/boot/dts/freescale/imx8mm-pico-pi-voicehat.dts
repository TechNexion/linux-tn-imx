/*
 * Copyright 2018 Technexion Ltd.
 * Copyright 2018 NXP
 *
 * Author: Richard Hu <richard.hu@technexion.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

#include <dt-bindings/input/input.h>
#include "imx8mm-pico-pi.dts"

/ {
	sound-tfa9912 {
		compatible = "nxp,imx-audio-tfa98xx", "nxp,imx-tfa98xx";
		nxp,model = "TFA9912";
		cpu-dai = <&sai2>;
		ssi-controller = <&sai2>;
		nxp,audio-codec = <&tfa98xx_left &tfa98xx_right>;
		nxp,audio-routing =
			"Speaker", "OUTL",
			"DMIC1", "Mic",
			"DMIC2", "Mic",
			"DMIC3", "Mic",
			"DMIC4", "Mic";
	};

	sound-sph0645 {
		compatible = "nxp,imx-audio-sph0645", "nxp,imx-sph0645";
		nxp,model = "SPH0645";
		cpu-dai = <&sai3>;
		ssi-controller = <&sai3>;
		nxp,audio-codec = <&sound_record>;
	};

	sound_record: codec {
		compatible = "knowles,sph0645";
	};

	gpio_keys {
		compatible = "gpio-keys";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_gpio_key_voicehat>;

		prev {
			gpios = <&gpio3 0 GPIO_ACTIVE_LOW>;
			label = "KEY PREV";
			linux,code = <KEY_PREVIOUS>;
		};

		play {
			gpios = <&gpio5 4 GPIO_ACTIVE_LOW>;
			label = "KEY PLAY";
			linux,code = <KEY_PLAY>;
		};

		next {
			gpios = <&gpio5 20 GPIO_ACTIVE_LOW>;
			label = "KEY NEXT";
			linux,code = <KEY_NEXT>;
		};

		up {
			gpios = <&gpio3 7 GPIO_ACTIVE_LOW>;
			label = "KEY UP";
			linux,code = <KEY_UP>;
		};

		down {
			gpios = <&gpio3 16 GPIO_ACTIVE_LOW>;
			label = "KEY DOWN";
			linux,code = <KEY_DOWN>;
		};

		mute {
			gpios = <&gpio3 6 GPIO_ACTIVE_LOW>;
			label = "KEY MUTE";
			linux,code = <KEY_MUTE>;
		};

		pair {
			gpios = <&gpio5 13 GPIO_ACTIVE_LOW>;
			label = "KEY PAIR";
			linux,code = <KEY_SELECT>;
		};

		act {
			gpios = <&gpio5 3 GPIO_ACTIVE_LOW>;
			label = "KEY ACT";
			linux,code = <KEY_OK>;
		};
	};
};

&sai2 {
	status = "okay";
};

&sai3 {
	status = "okay";
};

&i2c2 {
	tfa98xx_left: tfa98xx_left@34 {
		compatible = "nxp,tfa98xx";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_tfa98xx>;
		reg = <0x34>;
		reset-gpio = <&gpio5 10 GPIO_ACTIVE_HIGH>;
		irq-gpio = <&gpio5 12 GPIO_ACTIVE_HIGH>;
	};

	tfa98xx_right: tfa98xx_right@35 {
		compatible = "nxp,tfa98xx";
		reg = <0x35>;
	};
};

&i2c3 {
	/* PCA9955 - 16-bit RGB LED */
	led_pca9955: pca9955@60 {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "nxp,pca9955";
		reg = <0x60>;

		led0 {
			label = "blue0";
			linux,default-trigger = "none";
			reg = <0>;
		};

		led1 {
			label = "green0";
			linux,default-trigger = "none";
			reg = <1>;
		};

		led2 {
			label = "red0";
			linux,default-trigger = "none";
			reg = <2>;
		};

		led3 {
			label = "blue1";
			linux,default-trigger = "none";
			reg = <3>;
		};

		led4 {
			label = "green1";
			linux,default-trigger = "none";
			reg = <4>;
		};

		led5 {
			label = "red1";
			linux,default-trigger = "none";
			reg = <5>;
		};

		led6 {
			label = "blue2";
			linux,default-trigger = "none";
			reg = <6>;
		};

		led7 {
			label = "green2";
			linux,default-trigger = "none";
			reg = <7>;
		};

		led8 {
			label = "red2";
			linux,default-trigger = "none";
			reg = <8>;
		};

		led9 {
			label = "blue3";
			linux,default-trigger = "none";
			reg = <9>;
		};

		led10 {
			label = "green3";
			linux,default-trigger = "none";
			reg = <10>;
		};

		led11 {
			label = "red3";
			linux,default-trigger = "none";
			reg = <11>;
		};

		led12 {
			label = "blue4";
			linux,default-trigger = "none";
			reg = <12>;
		};

		led13 {
			label = "green4";
			linux,default-trigger = "none";
			reg = <13>;
		};

		led14 {
			label = "red4";
			linux,default-trigger = "none";
			reg = <14>;
		};

		led15 {
			label = "blue5";
			linux,default-trigger = "none";
			reg = <15>;
		};
	};
};
